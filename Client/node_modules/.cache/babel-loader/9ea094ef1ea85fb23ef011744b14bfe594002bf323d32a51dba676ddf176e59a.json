{"ast":null,"code":"const regExEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\nconst regexPassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&]{6,10}/;\n\n/* const validate = (userData, errors, setErrors) => {\r\n    // let errorsObj = {};\r\n\r\n    if (!userData.email) {\r\n        setErrors({ ...errors, email: 'Email is required' });\r\n        // errorsObj.email = 'Email is required';\r\n\r\n    } else if (userData.email.length > 35) {\r\n        setErrors({ ...errors, email: 'Email needs to be less than 35 characters' });\r\n        // errorsObj.email = 'Email needs to be less than 35 characters';\r\n    } else if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.email)) {\r\n        setErrors({ ...errors, email: 'Email is invalid' });\r\n        // errorsObj.email = 'Email is invalid';\r\n    } else {\r\n        setErrors({ ...errors, email: '' });\r\n    }\r\n\r\n    if (userData.password.length < 6 || userData.password.length > 10) {\r\n        setErrors({ ...errors, password: 'Password needs to be between 6 and 10 characters' });\r\n    }\r\n    //     errorsObj.password = 'Password needs to be between 6 and 10 characters';\r\n    else if (!/(?=.*[0-9])/.test(userData.password)) {\r\n        setErrors({ ...errors, password: 'Password needs to be a number' });\r\n    } else {\r\n        setErrors({ ...errors, password: '' });\r\n    }\r\n    //     errorsObj.password = 'Password needs to be a number';\r\n    // }\r\n\r\n    // setErrors(errorsObj);\r\n} */\n\nconst validate = inputs => {\n  const errors = {};\n  if (!inputs.email) errors.email = \"Email is null\";\n  if (inputs.email.length < 6) errors.email = \"Email contain 6 characters\";\n  if (!regExEmail.test(inputs.email)) errors.email = \"Email Will be Email\";\n  if (!regexPassword.test(inputs.password)) errors.password = \"Password ... \";\n  if (inputs.password.length < 6) errors.password = \"Password must contain 6 characters\";\n  if (!inputs.password) errors.password = \"Password is null\";\n  return errors;\n};\n//! el set es ASYNC\n/* const handleChange = (event) => {\r\n    setInputs({\r\n        ...inputs,\r\n        [event.target.name]: event.target.value,\r\n        // email: dede\r\n    });\r\n    setInputsErrors(\r\n        validate({\r\n            ...inputs,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    );\r\n}; */\n\nexport default validate;","map":{"version":3,"names":["regExEmail","regexPassword","validate","inputs","errors","email","length","test","password"],"sources":["C:/Users/Elvis/Documents/Proyectos/Soy Henry/M2/rick_and_morty/src/components/Form/validation.js"],"sourcesContent":["\r\nconst regExEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\nconst regexPassword =\r\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&]{6,10}/;\r\n\r\n/* const validate = (userData, errors, setErrors) => {\r\n    // let errorsObj = {};\r\n\r\n    if (!userData.email) {\r\n        setErrors({ ...errors, email: 'Email is required' });\r\n        // errorsObj.email = 'Email is required';\r\n\r\n    } else if (userData.email.length > 35) {\r\n        setErrors({ ...errors, email: 'Email needs to be less than 35 characters' });\r\n        // errorsObj.email = 'Email needs to be less than 35 characters';\r\n    } else if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.email)) {\r\n        setErrors({ ...errors, email: 'Email is invalid' });\r\n        // errorsObj.email = 'Email is invalid';\r\n    } else {\r\n        setErrors({ ...errors, email: '' });\r\n    }\r\n\r\n    if (userData.password.length < 6 || userData.password.length > 10) {\r\n        setErrors({ ...errors, password: 'Password needs to be between 6 and 10 characters' });\r\n    }\r\n    //     errorsObj.password = 'Password needs to be between 6 and 10 characters';\r\n    else if (!/(?=.*[0-9])/.test(userData.password)) {\r\n        setErrors({ ...errors, password: 'Password needs to be a number' });\r\n    } else {\r\n        setErrors({ ...errors, password: '' });\r\n    }\r\n    //     errorsObj.password = 'Password needs to be a number';\r\n    // }\r\n\r\n    // setErrors(errorsObj);\r\n} */\r\n\r\nconst validate = (inputs) => {\r\n    const errors = {};\r\n    if (!inputs.email) errors.email = \"Email is null\";\r\n    \r\n    if (inputs.email.length < 6) errors.email = \"Email contain 6 characters\";\r\n\r\n    if (!regExEmail.test(inputs.email)) errors.email = \"Email Will be Email\";\r\n    if (!regexPassword.test(inputs.password)) errors.password = \"Password ... \";\r\n    if (inputs.password.length < 6)\r\n        errors.password = \"Password must contain 6 characters\";\r\n    if (!inputs.password) errors.password = \"Password is null\";\r\n    return errors;\r\n};\r\n//! el set es ASYNC\r\n/* const handleChange = (event) => {\r\n    setInputs({\r\n        ...inputs,\r\n        [event.target.name]: event.target.value,\r\n        // email: dede\r\n    });\r\n    setInputsErrors(\r\n        validate({\r\n            ...inputs,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    );\r\n}; */\r\n\r\nexport default validate;"],"mappings":"AACA,MAAMA,UAAU,GAAG,2CAA2C;AAC9D,MAAMC,aAAa,GACf,yEAAyE;;AAE7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAIC,MAAM,IAAK;EACzB,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,IAAI,CAACD,MAAM,CAACE,KAAK,EAAED,MAAM,CAACC,KAAK,GAAG,eAAe;EAEjD,IAAIF,MAAM,CAACE,KAAK,CAACC,MAAM,GAAG,CAAC,EAAEF,MAAM,CAACC,KAAK,GAAG,4BAA4B;EAExE,IAAI,CAACL,UAAU,CAACO,IAAI,CAACJ,MAAM,CAACE,KAAK,CAAC,EAAED,MAAM,CAACC,KAAK,GAAG,qBAAqB;EACxE,IAAI,CAACJ,aAAa,CAACM,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,EAAEJ,MAAM,CAACI,QAAQ,GAAG,eAAe;EAC3E,IAAIL,MAAM,CAACK,QAAQ,CAACF,MAAM,GAAG,CAAC,EAC1BF,MAAM,CAACI,QAAQ,GAAG,oCAAoC;EAC1D,IAAI,CAACL,MAAM,CAACK,QAAQ,EAAEJ,MAAM,CAACI,QAAQ,GAAG,kBAAkB;EAC1D,OAAOJ,MAAM;AACjB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}