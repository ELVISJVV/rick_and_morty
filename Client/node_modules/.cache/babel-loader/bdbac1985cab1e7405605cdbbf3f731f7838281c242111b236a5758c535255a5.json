{"ast":null,"code":"const {\n  ADD_FAV,\n  REMOVE_FAV,\n  FILTER,\n  ORDER\n} = require(\"./action-types\");\nconst initialState = {\n  myFavorites: [],\n  allCharactersFav: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_FAV:\n      return {\n        ...state,\n        myFavorites: [...state.allCharactersFav, action.payload],\n        allCharactersFav: [...state.allCharactersFav, action.payload]\n      };\n    case REMOVE_FAV:\n      return {\n        ...state,\n        myFavorites: state.myFavorites.filter(character => character.id !== action.payload)\n      };\n    case FILTER:\n      const allCharactersFiltered = state.allCharactersFav.filter(character => character.gender === action.payload);\n      return {\n        ...state,\n        myFavorites: action.payload === 'allCharacters' ? state.allCharactersFav : allCharactersFiltered\n      };\n    case ORDER:\n      const allCharactersFavCopy = [...state.allCharactersFav];\n      return {\n        ...state,\n        myFavorites: action.payload === 'A' ? allCharactersFavCopy.sort((a, b) => a.id - b.id) : allCharactersFavCopy.sort((a, b) => b.id - a.id)\n        // ? allCharactersFavCopy.sort((a,b) => a.name.localeCompare(b.name))\n        // : allCharactersFavCopy.sort((a,b) => b.name.localeCompare(a.name))\n      };\n\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","FILTER","ORDER","require","initialState","myFavorites","allCharactersFav","rootReducer","state","arguments","length","undefined","action","type","payload","filter","character","id","allCharactersFiltered","gender","allCharactersFavCopy","sort","a","b"],"sources":["C:/Users/Elvis/Documents/Proyectos/Soy Henry/M2/rick_and_morty/src/redux/reducer.js"],"sourcesContent":["const { ADD_FAV, REMOVE_FAV,FILTER,ORDER } = require(\"./action-types\")\r\n\r\n\r\nconst initialState = {\r\n    myFavorites: [],\r\n    allCharactersFav: [],\r\n}\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_FAV:\r\n            return {\r\n                ...state,\r\n                myFavorites: [...state.allCharactersFav, action.payload],\r\n                allCharactersFav: [...state.allCharactersFav, action.payload]\r\n            }\r\n        case REMOVE_FAV:\r\n            return {\r\n                ...state,\r\n                myFavorites: state.myFavorites.filter((character) => character.id !== action.payload)\r\n            }\r\n            case FILTER:\r\n                const allCharactersFiltered =state.allCharactersFav.filter(character =>character.gender === action.payload)\r\n                return {\r\n                    ...state,\r\n                    myFavorites:\r\n                    action.payload === 'allCharacters'\r\n                    ? state.allCharactersFav\r\n                    : allCharactersFiltered\r\n\r\n                }\r\n                case ORDER:\r\n                    const allCharactersFavCopy =[...state.allCharactersFav] \r\n                    return{\r\n                        ...state,\r\n                        myFavorites:\r\n                        action.payload === 'A' \r\n                        ? allCharactersFavCopy.sort((a,b) => a.id - b.id)\r\n                        : allCharactersFavCopy.sort((a,b) => b.id - a.id) \r\n                        // ? allCharactersFavCopy.sort((a,b) => a.name.localeCompare(b.name))\r\n                        // : allCharactersFavCopy.sort((a,b) => b.name.localeCompare(a.name))\r\n\r\n\r\n                    }\r\n\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n\r\nexport default rootReducer;"],"mappings":"AAAA,MAAM;EAAEA,OAAO;EAAEC,UAAU;EAACC,MAAM;EAACC;AAAM,CAAC,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAGtE,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,gBAAgB,EAAE;AACtB,CAAC;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAEQ,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC7C,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKd,OAAO;MACR,OAAO;QACH,GAAGS,KAAK;QACRH,WAAW,EAAE,CAAC,GAAGG,KAAK,CAACF,gBAAgB,EAAEM,MAAM,CAACE,OAAO,CAAC;QACxDR,gBAAgB,EAAE,CAAC,GAAGE,KAAK,CAACF,gBAAgB,EAAEM,MAAM,CAACE,OAAO;MAChE,CAAC;IACL,KAAKd,UAAU;MACX,OAAO;QACH,GAAGQ,KAAK;QACRH,WAAW,EAAEG,KAAK,CAACH,WAAW,CAACU,MAAM,CAAEC,SAAS,IAAKA,SAAS,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO;MACxF,CAAC;IACD,KAAKb,MAAM;MACP,MAAMiB,qBAAqB,GAAEV,KAAK,CAACF,gBAAgB,CAACS,MAAM,CAACC,SAAS,IAAGA,SAAS,CAACG,MAAM,KAAKP,MAAM,CAACE,OAAO,CAAC;MAC3G,OAAO;QACH,GAAGN,KAAK;QACRH,WAAW,EACXO,MAAM,CAACE,OAAO,KAAK,eAAe,GAChCN,KAAK,CAACF,gBAAgB,GACtBY;MAEN,CAAC;IACD,KAAKhB,KAAK;MACN,MAAMkB,oBAAoB,GAAE,CAAC,GAAGZ,KAAK,CAACF,gBAAgB,CAAC;MACvD,OAAM;QACF,GAAGE,KAAK;QACRH,WAAW,EACXO,MAAM,CAACE,OAAO,KAAK,GAAG,GACpBM,oBAAoB,CAACC,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKD,CAAC,CAACL,EAAE,GAAGM,CAAC,CAACN,EAAE,CAAC,GAC/CG,oBAAoB,CAACC,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKA,CAAC,CAACN,EAAE,GAAGK,CAAC,CAACL,EAAE;QAChD;QACA;MAGJ,CAAC;;IAEb;MACI,OAAO;QAAC,GAAGT;MAAK,CAAC;EACzB;AACJ,CAAC;AAGD,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}