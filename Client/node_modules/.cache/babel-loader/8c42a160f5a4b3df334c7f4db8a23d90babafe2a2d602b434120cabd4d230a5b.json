{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elvis\\\\Documents\\\\Proyectos\\\\Soy Henry\\\\M2\\\\rick_and_morty\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\n// import Card from './components/Card/Card.jsx';\nimport Cards from './components/Cards/Cards.jsx';\nimport './normalize.css';\nimport Nav from './components/Nav/Nav.jsx';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n\n  // const onSearch = () =>{\n\n  //    setCharacters([...characters, example])\n  // }\n\n  const onSearch = id => {\n    axios(`https://rickandmortyapi.com/api/character/${id}`).then(_ref => {\n      let {\n        data\n      } = _ref;\n      if (data.name) {\n        setCharacters(oldChars => [...oldChars, data]);\n      } else {\n        window.alert('¡No hay personajes con este ID!');\n      }\n    });\n  };\n  const onCLose = id => {\n    const newCharacters = characters.filter(function (character) {\n      return parseInt(id) !== character.id;\n    });\n    setCharacters(newCharacters);\n  };\n  const random = () => {\n    const numeroAleatorio = Math.floor(Math.random() * (825 - 1)) + 1;\n    return numeroAleatorio;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      characters: characters,\n      onCLose: onCLose,\n      random: random\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"XYOUpNAi+Jhs2dnEwppRANg7X2I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Cards","Nav","useState","axios","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","onSearch","id","then","_ref","data","name","oldChars","window","alert","onCLose","newCharacters","filter","character","parseInt","random","numeroAleatorio","Math","floor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Elvis/Documents/Proyectos/Soy Henry/M2/rick_and_morty/src/App.js"],"sourcesContent":["import './App.css';\n// import Card from './components/Card/Card.jsx';\nimport Cards from './components/Cards/Cards.jsx';\nimport './normalize.css'\nimport Nav from './components/Nav/Nav.jsx';\nimport { useState } from 'react';\nimport axios from 'axios';\n\n\n\nfunction App() {\n   const [characters, setCharacters] = useState([]);\n   \n   // const onSearch = () =>{\n      \n   //    setCharacters([...characters, example])\n   // }\n\n   const onSearch = (id) => {\n   \n      axios(`https://rickandmortyapi.com/api/character/${id}`).then(({ data }) => {\n         if (data.name) {\n            setCharacters((oldChars) => [...oldChars, data]);\n         } else {\n            window.alert('¡No hay personajes con este ID!');\n         }\n      });\n   }\n\n   const onCLose = (id) => {\n      const newCharacters = characters.filter(function (character) {\n         return parseInt(id) !==  character.id})\n      setCharacters(newCharacters)\n   }\n   const random = () => {\n      \n      const numeroAleatorio = Math.floor(Math.random() * (825 - 1)) + 1;\n\n      return numeroAleatorio;\n   }\n   return (\n      <div className='App'>\n         <Nav onSearch={onSearch} />\n         {/* <SearchBar onSearch={(characterID) => window.alert(characterID)} /> */}\n         <Cards characters={characters} onCLose={onCLose} random={random}/>\n         \n      </div>\n   );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB;AACA,OAAOA,KAAK,MAAM,8BAA8B;AAChD,OAAO,iBAAiB;AACxB,OAAOC,GAAG,MAAM,0BAA0B;AAC1C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEhD;;EAEA;EACA;;EAEA,MAAMQ,QAAQ,GAAIC,EAAE,IAAK;IAEtBR,KAAK,CAAE,6CAA4CQ,EAAG,EAAC,CAAC,CAACC,IAAI,CAACC,IAAA,IAAc;MAAA,IAAb;QAAEC;MAAK,CAAC,GAAAD,IAAA;MACpE,IAAIC,IAAI,CAACC,IAAI,EAAE;QACZN,aAAa,CAAEO,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEF,IAAI,CAAC,CAAC;MACnD,CAAC,MAAM;QACJG,MAAM,CAACC,KAAK,CAAC,iCAAiC,CAAC;MAClD;IACH,CAAC,CAAC;EACL,CAAC;EAED,MAAMC,OAAO,GAAIR,EAAE,IAAK;IACrB,MAAMS,aAAa,GAAGZ,UAAU,CAACa,MAAM,CAAC,UAAUC,SAAS,EAAE;MAC1D,OAAOC,QAAQ,CAACZ,EAAE,CAAC,KAAMW,SAAS,CAACX,EAAE;IAAA,CAAC,CAAC;IAC1CF,aAAa,CAACW,aAAa,CAAC;EAC/B,CAAC;EACD,MAAMI,MAAM,GAAGA,CAAA,KAAM;IAElB,MAAMC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACF,MAAM,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;IAEjE,OAAOC,eAAe;EACzB,CAAC;EACD,oBACGpB,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACjBxB,OAAA,CAACJ,GAAG;MAACS,QAAQ,EAAEA;IAAS;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE3B5B,OAAA,CAACL,KAAK;MAACQ,UAAU,EAAEA,UAAW;MAACW,OAAO,EAAEA,OAAQ;MAACK,MAAM,EAAEA;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhE,CAAC;AAEZ;AAAC1B,EAAA,CAtCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}