{"ast":null,"code":"const validate = (userData, errors, setErrors) => {\n  // let errorsObj = {};\n\n  if (!userData.email) {\n    setErrors({\n      ...errors,\n      email: 'Email is required'\n    });\n    // errorsObj.email = 'Email is required';\n  } else if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.email)) {\n    setErrors({\n      ...errors,\n      email: 'Email is invalid'\n    });\n    // errorsObj.email = 'Email is invalid';\n  } else if (userData.email.length > 35) {\n    setErrors({\n      ...errors,\n      email: 'Email needs to be less than 35 characters'\n    });\n    // errorsObj.email = 'Email needs to be less than 35 characters';\n  } else {\n    setErrors({\n      ...errors,\n      email: ''\n    });\n  }\n  if (userData.password.length < 6 || userData.password.length > 10) {\n    setErrors({\n      ...errors,\n      password: 'Password needs to be between 6 and 10 characters'\n    });\n  }\n  //     errorsObj.password = 'Password needs to be between 6 and 10 characters';\n  else if (!/(?=.*[0-9])/.test(userData.password)) {\n    setErrors({\n      ...errors,\n      password: 'Password needs to be between 6 and 10 characters'\n    });\n  }\n  //     errorsObj.password = 'Password needs to be a number';\n  // }\n\n  // setErrors(errorsObj);\n};\n\nexport default validate;","map":{"version":3,"names":["validate","userData","errors","setErrors","email","test","length","password"],"sources":["C:/Users/Elvis/Documents/Proyectos/Soy Henry/M2/rick_and_morty/src/components/Form/validation.js"],"sourcesContent":["\r\n\r\nconst validate = (userData, errors, setErrors) => {\r\n    // let errorsObj = {};\r\n\r\n    if (!userData.email) {\r\n        setErrors({ ...errors, email: 'Email is required' });\r\n        // errorsObj.email = 'Email is required';\r\n\r\n    } else if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.email)) {\r\n        setErrors({ ...errors, email: 'Email is invalid' });\r\n        // errorsObj.email = 'Email is invalid';\r\n    } else if (userData.email.length > 35) {\r\n        setErrors({ ...errors, email: 'Email needs to be less than 35 characters' });\r\n        // errorsObj.email = 'Email needs to be less than 35 characters';\r\n    }else {\r\n        setErrors({ ...errors, email: '' });\r\n    }\r\n\r\n    if (userData.password.length < 6 || userData.password.length > 10) {\r\n        setErrors({ ...errors, password: 'Password needs to be between 6 and 10 characters' });\r\n    }\r\n    //     errorsObj.password = 'Password needs to be between 6 and 10 characters';\r\n    else if (!/(?=.*[0-9])/.test(userData.password)) {\r\n        setErrors({ ...errors, password: 'Password needs to be between 6 and 10 characters' });\r\n    }\r\n    //     errorsObj.password = 'Password needs to be a number';\r\n    // }\r\n\r\n    // setErrors(errorsObj);\r\n}\r\n\r\n\r\nexport default validate;"],"mappings":"AAEA,MAAMA,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,KAAK;EAC9C;;EAEA,IAAI,CAACF,QAAQ,CAACG,KAAK,EAAE;IACjBD,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEE,KAAK,EAAE;IAAoB,CAAC,CAAC;IACpD;EAEJ,CAAC,MAAM,IAAI,CAAC,6CAA6C,CAACC,IAAI,CAACJ,QAAQ,CAACG,KAAK,CAAC,EAAE;IAC5ED,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEE,KAAK,EAAE;IAAmB,CAAC,CAAC;IACnD;EACJ,CAAC,MAAM,IAAIH,QAAQ,CAACG,KAAK,CAACE,MAAM,GAAG,EAAE,EAAE;IACnCH,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEE,KAAK,EAAE;IAA4C,CAAC,CAAC;IAC5E;EACJ,CAAC,MAAK;IACFD,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEE,KAAK,EAAE;IAAG,CAAC,CAAC;EACvC;EAEA,IAAIH,QAAQ,CAACM,QAAQ,CAACD,MAAM,GAAG,CAAC,IAAIL,QAAQ,CAACM,QAAQ,CAACD,MAAM,GAAG,EAAE,EAAE;IAC/DH,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEK,QAAQ,EAAE;IAAmD,CAAC,CAAC;EAC1F;EACA;EAAA,KACK,IAAI,CAAC,aAAa,CAACF,IAAI,CAACJ,QAAQ,CAACM,QAAQ,CAAC,EAAE;IAC7CJ,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEK,QAAQ,EAAE;IAAmD,CAAC,CAAC;EAC1F;EACA;EACA;;EAEA;AACJ,CAAC;;AAGD,eAAeP,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}